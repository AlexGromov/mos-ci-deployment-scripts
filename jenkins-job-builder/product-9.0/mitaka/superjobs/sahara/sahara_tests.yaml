- job:
    name: 9.0-sahara_tests
    wrappers:
      - build-name:
          name: ${{BUILD_NUMBER}}.${{FILE,path="build-name-setter.info"}}
    parameters:
      - string:
          name: ISO_DIR
          default: '/var/www/fuelweb-iso'
      - string:
          name: SNAPSHOT_NAME
      - string:
          name: REPORT_PREFIX
          default: '/srv/jenkins/sahara'
      - string:
          name: GLANCE_IMAGES
          default: '/home/jenkins/images/'
    builders:
        - shell: |
            set +e
            ISO_NAME=`ls "$ISO_DIR"`
            ISO_ID=`echo "$ISO_NAME" | cut -f3 -d-`

            # Generate file for build-name plugin
            SNAPSHOT=`echo $SNAPSHOT_NAME | sed 's/ha_deploy_//'`
            echo "$ISO_ID"_"$SNAPSHOT" > build-name-setter.info

            ENV_NAME=MOS_CI_"$ISO_NAME"

            # Storing path for xml reports, that will be used in
            # report_to_testrail job
            REPORT_PATH="$REPORT_PREFIX"/"$ENV_NAME"_"$SNAPSHOT_NAME"
            echo "$REPORT_PATH" > ./param.pm
            echo "$BUILD_URL" > ./build_url

            virtualenv venv
            . venv/bin/activate
            sudo apt-get install sshpass, git

            git clone https://github.com/openstack/sahara-tests.git
            cd sahara-tests
            git fetch https://review.openstack.org/openstack/sahara-tests refs/changes/15/281315/6 && git checkout FETCH_HEAD

            pip install -r requirements.txt


            for FILE in `ls -1 "$GLANCE_IMAGES"` ;
            do
            sshpass -p 'r00tme' scp -o "UserKnownHostsFile=/dev/null StrictHostKeyChecking no" "$GLANCE_IMAGES$FILE" root@10.109.2.2:/root
            image_name=`echo "$FILE" | sed s/.qcow2//g'
            # glance image-create --name "$image_name" --file "$FILE" --disk-format qcow2 --container-format bare
            echo 'glance image-create --name "$image_name" --file "$FILE" --disk-format qcow2 --container-format bare' | sshpass -p 'r00tme' ssh -T root@10.109.2.2
            done

            # Generating file for configure

            echo '[DEFAULT]' > sahara-conf
            echo 'OS_USERNAME: admin' >> sahara-conf
            echo 'OS_PASSWORD: admin' >> sahara-conf
            echo 'OS_TENANT_NAME: admin' >> sahara-conf
            echo 'OS_AUTH_URL: http://10.109.1.3:5000/v2' >> sahara-conf
            echo 'network_type: neutron' >> sahara-conf
            echo 'network_private_name: private' >> sahara-conf
            echo 'network_public_name: public' >> sahara-conf
            echo 'vanilla_two_six_image: centos_sahara_vanilla_hadoop_2_6_latest' >> sahara-conf
            echo 'vanilla_two_seven_one_image: vanilla271' >> sahara-conf
            echo 'spark_image: spark' >> sahara-conf
            echo 'cdh_5_4_0_image: cdh540' >> sahara-conf
            echo 'cluster_name: cluster' >> sahara-conf
            echo 'ci_flavor_id: '\''2'\'' ' >> sahara-conf
            echo 'medium_flavor_id: '\''3'\'' ' >> sahara-conf
            echo 'large_flavor_id: '\''5'\'' ' >> sahara-conf

            tox -e venv -- sahara-scenario -p vanilla -v 2.7.1 -V ./sahara-conf

            deactivate
#    scm:
#        - sahara-tests-repository
    project-type: freestyle
    defaults: global
    description: 'description'
    disabled: false
    display-name: '9.0_SAHARA_TESTS'
    concurrent: true
    browser: githubweb
    retry-count: 3
    logrotate:
      daysToKeep: 5
      numToKeep: 20
      artifactDaysToKeep: -1
      artifactNumToKeep: -1
    publishers:
      - email:
          recipients: 'efazliev@mirantis.com'

#      - postbuildscript:
#          script-only-if-succeeded: False
#          builders:
#            - shell: |
#                set -e
#                REPORT_PATH=`cat ./param.pm`
#                sudo mkdir -p "$REPORT_PATH"
#                sudo cp report.xml "$REPORT_PATH"
#                sudo cp build_url "$REPORT_PATH"
#      - archive:
#          artifacts: 'report.xml'
#          allow-empty: 'true'
#          fingerprint: true
#
#      - archive:
#          artifacts: 'test.log'
#          allow-empty: 'true'
#          fingerprint: true
#
#      - junit:
#          results: report.xml

      - workspace-cleanup:
          fail-build: false
